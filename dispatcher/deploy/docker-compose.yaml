version: '3.8'
services:
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - crawler-network
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - crawler-network

  crawler:
    image: crawler
    build:
      context: ..
      dockerfile: docker/crawler/Dockerfile
    environment:
      - KAFKA_BROKERS=kafka:9092
      - CONFIG_PATH=/app/configs/crawler.yaml
    ports:
      - "8080:8080"
    networks:
      - crawler-network
    deploy:
      replicas: 3

  dispatcher:
    image: dispatcher
    build:
      context: ..
      dockerfile: docker/dispatcher/Dockerfile
    environment:
      - KAFKA_BROKERS=kafka:9092
    networks:
      - crawler-network
    depends_on:
      - kafka
      - crawler

networks:
  crawler-network:
    driver: bridge



# version: '3.8'

# services:
#   kafka:
#     image: bitnami/kafka:latest
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
#       ALLOW_PLAINTEXT_LISTENER: yes
#       KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#       KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
#       KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#     ports:
#       - "9092:9092"
#     depends_on:
#       - zookeeper

#   zookeeper:
#     image: bitnami/zookeeper:latest
#     environment:
#       ALLOW_ANONYMOUS_LOGIN: yes
#     ports:
#       - "2181:2181"

#   dispatcher:
#     build:
#       context: .
#       dockerfile: Dockerfile.dispatcher
#     depends_on:
#       - kafka
#     environment:
#       KAFKA_BROKERS: kafka:9092
#       CRAWLER_BASE: http://crawler
#       CRAWLER_REPLICAS: 3
#     ports:
#       - "8081:8081" # nếu dispatcher có REST API

#   crawler:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     deploy:
#       mode: replicated
#       replicas: 3
#     environment:
#       PORT: 8080
#     expose:
#       - "8080"
